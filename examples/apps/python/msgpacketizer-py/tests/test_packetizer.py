from src.packetizerpy import packetizer

# DEBUG: [msgpacketizer.py 22] encode input: [123456789, 123456.789, '123.456789[sec]']
# DEBUG: [msgpacketizer.py 24] packed: 0x93 0xce 0x07 0x5b 0xcd 0x15 0xcb 0x40 0xfe 0x24 0x0c 0x9f 0xbe 0x76 0xc9 0xaf 0x31 0x32 0x33 0x2e 0x34 0x35 0x36 0x37 0x38 0x39 0x5b 0x73 0x65 0x63 0x5d
# DEBUG: [msgpacketizer.py 26] encoded: 0x22 0x01 0x93 0xce 0x07 0x5b 0xcd 0x15 0xcb 0x40 0xfe 0x24 0x0c 0x9f 0xbe 0x76 0xc9 0xaf 0x31 0x32 0x33 0x2e 0x34 0x35 0x36 0x37 0x38 0x39 0x5b 0x73 0x65 0x63 0x5d 0x43 0x00
simple = [123456789, 123456.789, "123.456789[sec]"]
simple_packed = b"\x93\xce\x07\x5b\xcd\x15\xcb\x40\xfe\x24\x0c\x9f\xbe\x76\xc9\xaf\x31\x32\x33\x2e\x34\x35\x36\x37\x38\x39\x5b\x73\x65\x63\x5d"
simple_encoded = b"\x22\x01\x93\xce\x07\x5b\xcd\x15\xcb\x40\xfe\x24\x0c\x9f\xbe\x76\xc9\xaf\x31\x32\x33\x2e\x34\x35\x36\x37\x38\x39\x5b\x73\x65\x63\x5d\x43\x00"

# DEBUG: [msgpacketizer.py 22] encode input: [123456789, 123456, 123]
# DEBUG: [msgpacketizer.py 24] packed: 0x93 0xce 0x07 0x5b 0xcd 0x15 0xce 0x00 0x01 0xe2 0x40 0x7b
# DEBUG: [msgpacketizer.py 26] encoded: 0x09 0x11 0x93 0xce 0x07 0x5b 0xcd 0x15 0xce 0x06 0x01 0xe2 0x40 0x7b 0xa3 0x00
arr = [123456789, 123456, 123]
arr_packet = b"\x93\xce\x07\x5b\xcd\x15\xce\x00\x01\xe2\x40\x7b"
arr_encoded = b"\x09\x11\x93\xce\x07\x5b\xcd\x15\xce\x06\x01\xe2\x40\x7b\xa3\x00"

# DEBUG: [msgpacketizer.py 22] encode input: {'micros': 123456789, 'millis': 123456, 'seconds': 123}
# DEBUG: [msgpacketizer.py 24] packed: 0x83 0xa6 0x6d 0x69 0x63 0x72 0x6f 0x73 0xce 0x07 0x5b 0xcd 0x15 0xa6 0x6d 0x69 0x6c 0x6c 0x69 0x73 0xce 0x00 0x01 0xe2 0x40 0xa7 0x73 0x65 0x63 0x6f 0x6e 0x64 0x73 0x7b
# DEBUG: [msgpacketizer.py 26] encoded: 0x17 0x21 0x83 0xa6 0x6d 0x69 0x63 0x72 0x6f 0x73 0xce 0x07 0x5b 0xcd 0x15 0xa6 0x6d 0x69 0x6c 0x6c 0x69 0x73 0xce 0x0e 0x01 0xe2 0x40 0xa7 0x73 0x65 0x63 0x6f 0x6e 0x64 0x73 0x7b 0xeb 0x00
mp = {"micros": 123456789, "millis": 123456, "seconds": 123}
mp_packed = b"\x83\xa6\x6d\x69\x63\x72\x6f\x73\xce\x07\x5b\xcd\x15\xa6\x6d\x69\x6c\x6c\x69\x73\xce\x00\x01\xe2\x40\xa7\x73\x65\x63\x6f\x6e\x64\x73\x7b"
mp_encoded = b"\x17\x21\x83\xa6\x6d\x69\x63\x72\x6f\x73\xce\x07\x5b\xcd\x15\xa6\x6d\x69\x6c\x6c\x69\x73\xce\x0e\x01\xe2\x40\xa7\x73\x65\x63\x6f\x6e\x64\x73\x7b\xeb\x00"

# DEBUG: [msgpacketizer.py 22] encode input: {'ka': [123456789, 123456.789, '123.456789[sec]'], 'km': {'micros': 123456789, 'millis': 123456, 'seconds': 123}}
# DEBUG: [msgpacketizer.py 24] packed: 0x82 0xa2 0x6b 0x61 0x93 0xce 0x07 0x5b 0xcd 0x15 0xcb 0x40 0xfe 0x24 0x0c 0x9f 0xbe 0x76 0xc9 0xaf 0x31 0x32 0x33 0x2e 0x34 0x35 0x36 0x37 0x38 0x39 0x5b 0x73 0x65 0x63 0x5d 0xa2 0x6b 0x6d 0x83 0xa6 0x6d 0x69 0x63 0x72 0x6f 0x73 0xce 0x07 0x5b 0xcd 0x15 0xa6 0x6d 0x69 0x6c 0x6c 0x69 0x73 0xce 0x00 0x01 0xe2 0x40 0xa7 0x73 0x65 0x63 0x6f 0x6e 0x64 0x73 0x7b
# DEBUG: [msgpacketizer.py 26] encoded: 0x3d 0x31 0x82 0xa2 0x6b 0x61 0x93 0xce 0x07 0x5b 0xcd 0x15 0xcb 0x40 0xfe 0x24 0x0c 0x9f 0xbe 0x76 0xc9 0xaf 0x31 0x32 0x33 0x2e 0x34 0x35 0x36 0x37 0x38 0x39 0x5b 0x73 0x65 0x63 0x5d 0xa2 0x6b 0x6d 0x83 0xa6 0x6d 0x69 0x63 0x72 0x6f 0x73 0xce 0x07 0x5b 0xcd 0x15 0xa6 0x6d 0x69 0x6c 0x6c 0x69 0x73 0xce 0x0e 0x01 0xe2 0x40 0xa7 0x73 0x65 0x63 0x6f 0x6e 0x64 0x73 0x7b 0x5b 0x00
custom = {"ka": simple, "km": mp}
custom_packed = b"\x82\xa2\x6b\x61\x93\xce\x07\x5b\xcd\x15\xcb\x40\xfe\x24\x0c\x9f\xbe\x76\xc9\xaf\x31\x32\x33\x2e\x34\x35\x36\x37\x38\x39\x5b\x73\x65\x63\x5d\xa2\x6b\x6d\x83\xa6\x6d\x69\x63\x72\x6f\x73\xce\x07\x5b\xcd\x15\xa6\x6d\x69\x6c\x6c\x69\x73\xce\x00\x01\xe2\x40\xa7\x73\x65\x63\x6f\x6e\x64\x73\x7b"
custom_encoded = b"\x3d\x31\x82\xa2\x6b\x61\x93\xce\x07\x5b\xcd\x15\xcb\x40\xfe\x24\x0c\x9f\xbe\x76\xc9\xaf\x31\x32\x33\x2e\x34\x35\x36\x37\x38\x39\x5b\x73\x65\x63\x5d\xa2\x6b\x6d\x83\xa6\x6d\x69\x63\x72\x6f\x73\xce\x07\x5b\xcd\x15\xa6\x6d\x69\x6c\x6c\x69\x73\xce\x0e\x01\xe2\x40\xa7\x73\x65\x63\x6f\x6e\x64\x73\x7b\x5b\x00"


def test_encode():
    encoded = packetizer.encode(0x01, simple_packed)
    assert encoded == simple_encoded

    encoded = packetizer.encode(0x11, arr_packet)
    assert encoded == arr_encoded

    encoded = packetizer.encode(0x21, mp_packed)
    assert encoded == mp_encoded

    encoded = packetizer.encode(0x31, custom_packed)
    assert encoded == custom_encoded
